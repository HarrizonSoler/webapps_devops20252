services:
  db:
    image: postgres:15.1-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=foobarbaz
    networks:
      - backend
    ports:
      - 5432:5432
    restart: unless-stopped
  api-node:
    image: devops-api-node
    build:
      context: ./api-node
      dockerfile: Dockerfile
    init: true
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped
  api-golang:
    image: devops-api-golang
    build:
      context: ./api-golang
      dockerfile: Dockerfile
    init: true
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080
    restart: unless-stopped
  client-react:
    labels:
      shipyard.primary-route: true
      shipyard.route: '/'
    image: devops-client-react
    build:
      context: ./client-react
      dockerfile: Dockerfile
    init: true
    depends_on:
      - api-node
      - api-golang
    networks:
      - frontend
    ports:
      - 5173:5173
    restart: unless-stopped
volumes:
  pgdata:
networks:
  frontend:
  backend:
